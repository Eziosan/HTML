<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mini.dao.ConcertMapper">
	
	<!-- 가수명으로 콘서트 리스트 출력하기
		id : 
	-->
	<select id="concertSinger" parameterType="string" resultType="concert" >
		select concert.concert_name, concert.concert_id, singer.singer_name
		from concert concert, singer singer
	 	where concert.main_sid = singer.main_sid
	 	and singer.singer_name like '%' || #{singer_name} || '%' 
	</select>
	
	<!-- 콘서트 객체 1개 들고오기 -->
	<select id="concertOne" parameterType="int" resultType="concert">
		select concert.concert_name, concert.place, concert.concert_date, concert.running_time, concert.price,
			   singer.singer_name
		from concert concert, singer singer
		where concert.main_sid = singer.main_sid
		and concert.concert_id = #{concert_id}
	</select>
	
	<!-- 콘서트 리트스 출력(콘서트 이름, 가수)
		id : concertList
		parameterType : 없음
		resultType : concert
		
		 1. concert 테이블, singer 테이블 조인
		 2. concert 테이블 = concert_name, singer 테이블 = singer_name 출력
	 -->
	 <select id="concertList" resultType="concert">
	 	select concert.concert_name, concert.concert_id ,singer.singer_name
	 	from concert concert, singer singer
	 	where concert.main_sid = singer.main_sid
	 	order by concert.concert_id
	 </select>
	
	<!-- 콘서트 상세정보 출력
		id : concertList
		parameterType : concert
		resultType : concert
		
		 1. concert 테이블, singer 테이블 조인
		 2. concert 테이블 = 전체 출력, singer 테이블 = singer_name 출력
		  & concert_id를 입력하여 원하는 정보 출력
	 -->
	 <select id="concertDetail" parameterType="int" resultType="concert">
	 	select concert.concert_name, concert.place, concert.concert_date, concert.running_time, concert.price,
	 		   singer.singer_name
	 	from concert concert, singer singer
	 	where concert.main_sid = singer.main_sid
	 	and concert.concert_id = #{concert_id}
	 </select>
	
</mapper>