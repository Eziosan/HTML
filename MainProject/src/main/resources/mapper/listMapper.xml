<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <!-- 인터페이스 위치 지정!!!!!! -->
<mapper namespace="music.is.mylife.dao.ListMapper">

	<!-- 취향 분석 페이지 : 윤영 -->
	<!-- 해당 유저의 모든 리스트 좋아요 수 -->
	<select id="selectListLikesByUser" parameterType="string" resultType="int">
		select sum(list_like) from playlist where user_id = #{user_id}
	</select>

	<!-- 해당 유저의 모든 리스트에 지금까지 달린 모든 댓글 수 -->
	<select id="selectListCommentsNumByUser" parameterType="string" resultType="int">
		select count(*) from list_comment where user_id = #{user_id}
	</select>
	
	
	
	
	<!-- [리스트 페이지]_화원 
		플레이 리스트 아이디 들고오기
		아이디: selectListId
		리턴 타입: ArrayList<string>
	 -->
	<select id="selectListId" resultType="playlist" parameterType="int">
		select p.playlist_id, pd.song_id
		from playlist p, playlist_detail pd
		where p.playlist_id = pd.playlist_id
		and pd.song_id = #{song_id}
	</select>
	
	<!--[리스트 페이지]
		리스트 배너사진 상위 5개 불러오기
		아이디: selectListBanner
		파라미터 타입: playlist
		리턴 타입: ArrayList<Playlist>
	  -->
	 <select id="selectListBanner" resultType="playlist" parameterType="int">
	 	<![CDATA[
	    	select pd.playlist_id, song.song_id, song.album_img
			from playlist_detail pd, song song
			where pd.song_id = song.song_id
			and rownum <= 5
			and pd.playlist_id = #{playlist_id}
    	]]>
	 </select>
	 
	 <!--[리스트 페이지]
	   리스트 곡 정보 출력
		아이디: selectListSong
		리턴 타입: ArrayList<Playlist>
	   -->
	 <select id="selectListSong"  resultType="playlist" parameterType="int">
	 	select p.playlist_id, pd.song_id,
        song.song_name, song.genre, song.album_img,
        singer.singer_name, singer.country
		from playlist p, playlist_detail pd, song song, singer singer
		where p.playlist_id = pd.playlist_id
		and pd.song_id = song.song_id
		and song.singer_id = singer.singer_id
		and p.playlist_id = #{playlist_id}
	 </select>
	 
	 <!-- [리스트 페이지] 
	 	리스트 정보 출력
		아이디: selectListInfo
		리턴 타입: Playlist
		파라미터 타입: ArrayList<Playlist>
	 -->
	 <select id="selectListInfo" resultType="playlist" parameterType="int">
	 	select playlist_id, user_id, list_name, list_explain, list_like, to_char(list_date, 'YYYYMMDD')
		from playlist 
		where playlist_id = #{playlist_id}
	 </select>
	 
	 <!--[리스트 페이지] 
	  	해당 리스트 곡 개수
		아이디: selectCountSong
		리턴 타입: int
		파라미터 타입: int
	   -->
	 <select id="selectCountSong" resultType="int" parameterType="int">
	 	select count(pd.song_id)
		from playlist p, playlist_detail pd
		where p.playlist_id = pd.playlist_id
		and pd.playlist_id = #{playlist_id}
	 </select>
	 
	 <!--[리스트 페이지] 
	  	리스트 댓글 입력
		아이디: insertListCommnet
		파라미터 타입: ListComment -->
	 <insert id="insertListCommnet" parameterType="list_comment">
	 	insert into list_comment (list_comment_id, user_id, playlist_id, user_comment, comment_like, comment_date)
		values (list_comment_seq.nextval, #{user_id}, #{playlist_id}, #{user_comment}, sysdate)
	 </insert>
</mapper>